---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/appointments":
    get:
      summary: Gets patient's appointments
      tags:
      - Appointment
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      - name: per_page
        in: query
        schema:
          type: string
      responses:
        '200':
          description: returns all patient's appointments
        '401':
          description: authorization failed
        '404':
          description: patient not found
        '422':
          description: invalid request
    post:
      summary: Creates an apoointment
      tags:
      - Appointment
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      responses:
        '201':
          description: appointment created
        '401':
          description: authorization failed
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_date_time_start:
                  type: string
                  format: date-time
                appointment_date_time_end:
                  type: string
                  format: date-time
                doctor_id:
                  type: number
              required:
              - appointment_date_time_start
              - appointment_date_time_end
              - doctor_id
  "/appointments/{id}":
    get:
      summary: Gets patient's appointment
      tags:
      - Appointment
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: returns patient's appointment
        '401':
          description: authorization failed
        '404':
          description: patient or appointment not found
        '422':
          description: invalid request
    delete:
      summary: Deletes patient's appointment
      tags:
      - Appointment
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: returns no content
        '401':
          description: authorization failed
        '404':
          description: patient or appointment not found
        '422':
          description: invalid request
  "/auth/login":
    post:
      summary: Logs in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: user logged in
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/doctors/{doctor_id}/appointments_simple":
    get:
      summary: Gets doctor's appointments (only dates)
      tags:
      - Appointment
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: doctor_id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      - name: per_page
        in: query
        schema:
          type: string
      responses:
        '200':
          description: returns all doctor's appointments (only dates)
        '401':
          description: authorization failed
        '404':
          description: doctor not found
        '422':
          description: invalid request
  "/doctor/appointments":
    get:
      summary: Gets logged in doctor's appointments
      tags:
      - Appointment
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      - name: per_page
        in: query
        schema:
          type: string
      responses:
        '200':
          description: returns all doctor's appointments
        '401':
          description: authorization failed
        '422':
          description: invalid request
  "/doctor/appointments/{id}":
    get:
      summary: Gets logged in doctor's appointment
      tags:
      - Appointment
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: returns doctor's appointment
        '401':
          description: authorization failed
        '404':
          description: appointment not found
        '422':
          description: invalid request
  "/doctor/appointments_simple":
    get:
      summary: Gets logged in doctor's appointments (only dates)
      tags:
      - Appointment
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      - name: per_page
        in: query
        schema:
          type: string
      responses:
        '200':
          description: returns all doctor's appointments (only dates)
        '401':
          description: authorization failed
        '422':
          description: invalid request
  "/doctors":
    get:
      summary: Gets all doctors
      tags:
      - Doctor
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      - name: per_page
        in: query
        schema:
          type: string
      responses:
        '200':
          description: returns all doctors
        '401':
          description: authorization failed
        '422':
          description: invalid request
    post:
      summary: Creates a doctor
      tags:
      - Doctor
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      responses:
        '201':
          description: doctor created
        '401':
          description: authorization failed
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                speciality:
                  type: string
                office_address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                cost:
                  type: number
                  format: float
                image_base64:
                  type: string
              required:
              - speciality
              - office_address
              - phone
              - email
              - cost
              - image_base64
  "/doctors/{id}":
    get:
      summary: Gets a doctor
      tags:
      - Doctor
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: returns a doctor
        '401':
          description: authorization failed
        '404':
          description: doctor not found
        '422':
          description: invalid request
    put:
      summary: Updates a doctor
      tags:
      - Doctor
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: returns updated doctor
        '401':
          description: current user not the given doctor or authorization failed
        '404':
          description: doctor not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                speciality:
                  type: string
                office_address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                cost:
                  type: number
                image_base64:
                  type: string
  "/qr/generate":
    get:
      summary: Generates a token for current user
      tags:
      - QR
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      responses:
        '200':
          description: returns a token
        '401':
          description: authorization failed
        '422':
          description: invalid request
  "/qr/read":
    post:
      summary: Reads a token for current user
      tags:
      - QR
      parameters:
      - name: AuthorizationToken
        in: header
        schema:
          type: string
      responses:
        '200':
          description: returns appointment information
        '401':
          description: unauthorized request (current user isn't a doctor) or authorization
            failed
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
  "/signup":
    post:
      summary: Signs up a user
      tags:
      - User
      parameters: []
      responses:
        '201':
          description: creates a new user
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amka:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
                fullname:
                  type: string
                date_of_birth:
                  type: string
                  format: date
              required:
              - amka
              - email
              - password
              - password_confirmation
              - fullname
              - date_of_birth
servers:
- url: https://{remoteHost}
  variables:
    remoteHost:
      default: medical-card-api.herokuapp.com
- url: http://{localHost}
  variables:
    localHost:
      default: 127.0.0.1:3000
